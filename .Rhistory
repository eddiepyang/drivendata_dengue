install.packages('data.tables')
install.packages('data.table')
library(dplyr)
library(ggplot)
library(dplyr)
library(ggplot2)
library(purrr)
library(data.table)
dengue <- fread('./input/dengue_features_train.csv')
str(dengue)
cor(dengue)
filter(dengue, 4:)
ncol(dengue)
filter(dengue, 4:ncol(dengue))
select(dengue, 4:ncol(dengue))
select(dengue, 4:ncol(dengue)) %>% colnames()
select(dengue, 5:ncol(dengue)) %>% colnames()
select(dengue, 5:ncol(dengue)) %>% cor()
select(dengue, 4:ncol(dengue)) %>% cor()
select(dengue, 5:ncol(dengue)) %>% cor()
select(dengue, 5:ncol(dengue)) %>% summary()
?cor
select(dengue, 5:ncol(dengue)) %>% cor(use = pairwise.complete.obs)
select(dengue, 5:ncol(dengue)) %>% cor(use = 'pairwise.complete.obs')
select(dengue, 5:ncol(dengue)) %>% cor(use = 'pairwise.complete.obs')
select(dengue, 5:ncol(dengue)) %>%
cor(use = 'pairwise.complete.obs') %>%
filter_all(any_vars(.>.5))
select(dengue, 5:ncol(dengue)) %>%
cor(use = 'pairwise.complete.obs') %>%
as_tibble() %>%
filter_all(any_vars(.>.5))
select(dengue, 5:ncol(dengue)) %>%
cor(use = 'pairwise.complete.obs')
cor_table <- select(dengue, 5:ncol(dengue)) %>%
cor(use = 'pairwise.complete.obs')
?apply
apply(cor_table, 2, function(x) x >.5)
cor_table[apply(cor_table, 2, function(x) x >.5)]
cor_table[table(apply(cor_table, 2, function(x) x >.5))]
apply(cor_table, 2, function(x) x >.5)
class(cor_table)
apply(cor_table, 2, function(x) x >.5) %>% class
as_tibble(cor_table)
indices <- apply(cor_table, 2, function(x) x >.5) %>% class
as_tibble(cor_table)[indices]
as_tibble(cor_table)
indices
indices <- apply(cor_table, 2, function(x) x >.5)
as_tibble(cor_table)[indices]
data.table(cor_table)
data.table(cor_table) %>% row.names()
tibble(cor_table) %>% row.names()
as_tibble(cor_table) %>% row.names()
as_tibble(cor_table) %>% filter_all(any(.>.5))
as_tibble(cor_table) %>% filter_all(any_vars(.>.5))
View(cor_table)
as_tibble(cor_table) %>% filter_all(any_vars(.>.5)) %>% dim
as_tibble(cor_table) %>% filter_all(any_vars(.>.5)) %>% dim()
cor_table %>% dim()
cor_table
install.packages('corrplot')
library(corrplot)
corrplot(cor_table)
save(corrplot(cor_table))
list.dirs()
list.files()
list.files('input')
response <- fread('./input/dengue_labels.csv')
response <- fread('./input/dengue_labels_train.csv')
library(data.table)
response <- fread('./input/dengue_labels_train.csv')
dengue <- fread('./input/dengue_features_train.csv')
str(dengue)
hist(response)
str(response)
hist(response$total_cases)
summary(response)
str(response)
response$city %>%
as.factor()
library(dplyr)
library(ggplot2)
library(purrr)
library(data.table)
response$city %>%
as.factor()
response$city %>%
as.factor() %>% levels()
response$city <- response$city %>%
as.factor()
str(response)
qplot(response$total_cases, ~response$city)
summary(response)
ggplot(response, aes(x = total_cases)) +
geom_histogram(fill = city)
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(fill = city))
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(fill = city, position_stack()))
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(fill = city, color = 'white'))
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(fill = city, color = 'white')) +
guides(color = FALSE)
library(ggthemes)
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(fill = city, color = 'white')) +
guides(color = FALSE) +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(bins = 60, aes(fill = city, color = 'white')) +
guides(color = FALSE) +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(bins = 60, aes(stat = 'identity', fill = city, color = 'white')) +
guides(color = FALSE) +
theme_hc()
prop.table(response$city)
?prop.table
response[,c(city, total_cases)]
response[,city:total_cases]
select(response, total_cases)
select(response, city, total_cases)
select(response, city, total_cases) %>%
prop.table()
select(response, city, total_cases) %>%
data.matrix() %>%
prop.table()
select(response, city, total_cases) %>%
data.matrix() %>%
table()
select(response, city, total_cases) %>%
table()
select(response, city, total_cases) %>%
table() %>%
prop.table()
select(response, city, total_cases) %>%
table() %>%
prop.table() %>%
ggplot(aes(x = total_cases)) +
geom_histogram(bins = 60, aes(fill = city, color = 'white')) +
guides(color = FALSE) +
theme_hc()
select(response, city, total_cases) %>%
table() %>%
prop.table()
select(response, city, total_cases) %>%
table() %>%
prop.table() %>% as.data.frame()
select(response, city, total_cases) %>%
table() %>%
prop.table() %>%
as.data.frame() %>%
ggplot(aes(x = total_cases, y = Freq)) +
geom_bar(aes(fill = city, color = 'white')) +
guides(color = FALSE) +
theme_hc()
select(response, city, total_cases) %>%
table() %>%
prop.table() %>%
as.data.frame() %>%
ggplot(aes(x = total_cases, y = Freq)) +
geom_bar(aes(fill = city, color = 'white'), stat = 'identity') +
guides(color = FALSE) +
theme_hc()
select(response, city, total_cases) %>%
table() %>%
prop.table() %>%
as.data.frame() %>%
ggplot(aes(x = total_cases, y = Freq)) +
geom_bar(aes(fill = city, color = 'white'), stat = 'identity') +
guides(color = FALSE)
select(response, city, total_cases) %>%
table() %>%
prop.table() %>%
as.data.frame() %>%
ggplot(aes(x = total_cases, y = Freq)) +
geom_bar(aes(fill = city), stat = 'identity') +
guides(color = FALSE)
ggplot(response, aes(x = total_cases)) +
geom_histogram(bins = 60, aes(y=..count../sum(..count..), fill = city, color = 'white')) +
guides(color = FALSE) +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(bins = 60, aes(y=..count../sum(..count..), fill = city, color = 'white')) +
guides(color = FALSE) +
xlabel('chicken') +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(bins = 60, aes(y=..count../sum(..count..), fill = city, color = 'white')) +
guides(color = FALSE) +
xlab('chicken') +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(bins = 60, aes(y=..count../sum(..count..), fill = city, color = 'white')) +
guides(color = FALSE) +
ylab('proportion') +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(y=..count../sum(..count..), bins = 60, fill = city, color = 'white')) +
guides(color = FALSE) +
ylab('proportion') +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(y=..count../sum(..count..)), bins = 60, fill = city, color = 'white')) +
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(y=..count../sum(..count..)), bins = 60, fill = city, color = 'white') +
guides(color = FALSE) +
ylab('proportion') +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(y=..count../sum(..count..), fill = city, color = 'white'), bins = 60) +
guides(color = FALSE) +
ylab('proportion') +
theme_hc()
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(y=..count../sum(..count..), fill = city, color = 'black'), bins = 60) +
guides(color = FALSE) +
ylab('proportion') +
theme_hc()
library(dplyr)
library(ggplot2)
library(purrr)
library(data.table)
response <- fread('./input/dengue_labels_train.csv')
dengue <- fread('./input/dengue_features_train.csv')
str(dengue)
cor_table <- select(dengue, 5:ncol(dengue)) %>%
cor(use = 'pairwise.complete.obs')
?apply
cor_table[table(apply(cor_table, 2, function(x) x >.5))]
apply(cor_table, 2, function(x) x >.5)
response$city <- response$city %>%0
library(dplyr)
library(ggplot2)
library(purrr)
library(data.table)
response <- fread('./input/dengue_labels_train.csv')
dengue <- fread('./input/dengue_features_train.csv')
str(dengue)
cor_table <- select(dengue, 5:ncol(dengue)) %>%
cor(use = 'pairwise.complete.obs')
?apply
cor_table[table(apply(cor_table, 2, function(x) x >.5))]
apply(cor_table, 2, function(x) x >.5)
response$city <- response$city %>%
as.factor()
str(response)
qplot(response$total_cases, ~response$city)
library(dplyr)
library(ggplot2)
library(purrr)
library(data.table)
response <- fread('./input/dengue_labels_train.csv')
dengue <- fread('./input/dengue_features_train.csv')
str(dengue)
cor_table <- select(dengue, 5:ncol(dengue)) %>%
cor(use = 'pairwise.complete.obs')
?apply
cor_table[table(apply(cor_table, 2, function(x) x >.5))]
apply(cor_table, 2, function(x) x >.5)
response$city <- response$city %>%
as.factor()
library(ggthemes)
ggplot(response, aes(x = total_cases)) +
geom_histogram(aes(y=..count../sum(..count..), fill = city, color = 'black'), bins = 60) +
guides(color = FALSE) +
ylab('proportion') +
theme_hc()
select(response, city, total_cases) %>%
table() %>%
prop.table() %>%
as.data.frame() %>%
ggplot(aes(x = total_cases, y = Freq)) +
geom_bar(aes(fill = city), stat = 'identity') +
guides(color = FALSE)
